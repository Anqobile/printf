#include <stdio.h>
#include <stdarg.h>
#include <unistd.h>

/**
  *buffer - buffer array to be printed
  *char_counts - char arrays to be printed
  *Return: number of chars to be printed
  */
int _printf(const char *format, ...)
{
    char buffer[1024];
    int buffer_index = 0;
    int char_count = 0;

    va_list args;
    va_start(args, format);

    for (int i = 0; format[i] != '\0'; i++)
    {
        if (format[i] == '%')
        {
            if (format[i + 1] != '\0')
            {
                char specifier = format[i + 1];
                if (specifier == 'c')
                {
                    char c = (char)va_arg(args, int);
                    buffer[buffer_index++] = c;
                    char_count++;
                }
                else if (specifier == 's')
                {
                    char *s = va_arg(args, char *);
                    int j = 0;
                    while (s[j] != '\0')
                    {
                        buffer[buffer_index++] = s[j++];
                        char_count++;
                    }
                }
                else if (specifier == '%')
                {
                    buffer[buffer_index++] = '%';
                    char_count++;
                }
                else if (specifier == 'd' || specifier == 'i')
                {
                    int num = va_arg(args, int);
                    int digits = 0;
                    int sign = 0;
                    if (num < 0)
                    {
                        sign = 1;
                        num = -num;
                    }
                    int temp = num;
                    do
                    {
                        digits++;
                        temp /= 10;
                    } while (temp > 0);

                    if (sign)
                    {
                        buffer[buffer_index++] = '-';
                        char_count++;
                    }

                    for (int k = buffer_index + digits - 1; k >= buffer_index; k--)
                    {
                        buffer[k] = '0' + num % 10;
                        num /= 10;
                        char_count++;
                    }

                    buffer_index += digits;
                }

                i++; // Skip the specifier character
            }
        }
        else
        {
            buffer[buffer_index++] = format[i];
            char_count++;
        }

        if (buffer_index >= 1024 || format[i + 1] == '\0')
        {
            write(STDOUT_FILENO, buffer, buffer_index);
            buffer_index = 0;
        }
    }

    va_end(args);

    return char_count;
}
